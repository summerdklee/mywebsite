[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Hello! I’m Dakyung Lee.",
    "section": "",
    "text": "Weolcome! 🙂\n\nThanks for visiting my portfolio website.\n\n\nPlease enjoy! (..◜ᴗ◝..)\n\n1 + 1\n\n2"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About me, Dakyung.",
    "section": "",
    "text": "Call me : Summer\nI’m : OO yo\nI live : in Seoul\nI’m studying : Data Sience"
  },
  {
    "objectID": "hw1.html#q1.-다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요.",
    "href": "hw1.html#q1.-다음-표의-내용을-데이터-프레임으로-만들어-출력해-보세요.",
    "title": "lec5 - hw1",
    "section": "",
    "text": "import pandas as pd\n\ndf = pd.DataFrame({'product' : ['사과', '딸기', '수박'],\n                    'price' : [1800, 1500, 3000],\n                    'sales' : [ 24, 38, 13]})\nprint(df)\n\n  product  price  sales\n0      사과   1800     24\n1      딸기   1500     38\n2      수박   3000     13"
  },
  {
    "objectID": "hw1.html#q2.-앞에서-만든-데이터-프레임을-이용해-과일의-가격-평균과-판매량-평균을-구해-보세요.",
    "href": "hw1.html#q2.-앞에서-만든-데이터-프레임을-이용해-과일의-가격-평균과-판매량-평균을-구해-보세요.",
    "title": "lec5 - hw1",
    "section": "",
    "text": "price_mean =  sum(df['price'] / 3)\nsales_mean = sum(df['sales'] / 3)\n\nprint(price_mean)\nprint(sales_mean)\n\n2100.0\n25.0"
  },
  {
    "objectID": "hw1.html",
    "href": "hw1.html",
    "title": "LEC5 - HW1",
    "section": "",
    "text": "84p\n\nQ1. 다음 표의 내용을 데이터 프레임으로 만들어 출력해 보세요.\n\nimport pandas as pd\n\ndf = pd.DataFrame({'product' : ['사과', '딸기', '수박'],\n                    'price' : [1800, 1500, 3000],\n                    'sales' : [ 24, 38, 13]})\nprint(df)\n\n  product  price  sales\n0      사과   1800     24\n1      딸기   1500     38\n2      수박   3000     13\n\n\n\n\nQ2. 앞에서 만든 데이터 프레임을 이용해 과일의 가격 평균과 판매량 평균을 구해 보세요.\n\nprice_mean =  sum(df['price'] / 3)\nsales_mean = sum(df['sales'] / 3)\n\nprint(price_mean)\nprint(sales_mean)\n\n2100.0\n25.0\n\n\n\n\n\n115p\n\nQ1. mpg 데이터를 불러와 복사본을 만드세요.\n\nimport pydataset\n\ndf_mpg = pydataset.data('mpg')\ndf_mpg_new = df_mpg.copy()\nprint(df_mpg_new)\n\n    manufacturer   model  displ  year  cyl       trans drv  cty  hwy fl  \\\n1           audi      a4    1.8  1999    4    auto(l5)   f   18   29  p   \n2           audi      a4    1.8  1999    4  manual(m5)   f   21   29  p   \n3           audi      a4    2.0  2008    4  manual(m6)   f   20   31  p   \n4           audi      a4    2.0  2008    4    auto(av)   f   21   30  p   \n5           audi      a4    2.8  1999    6    auto(l5)   f   16   26  p   \n..           ...     ...    ...   ...  ...         ...  ..  ...  ... ..   \n230   volkswagen  passat    2.0  2008    4    auto(s6)   f   19   28  p   \n231   volkswagen  passat    2.0  2008    4  manual(m6)   f   21   29  p   \n232   volkswagen  passat    2.8  1999    6    auto(l5)   f   16   26  p   \n233   volkswagen  passat    2.8  1999    6  manual(m5)   f   18   26  p   \n234   volkswagen  passat    3.6  2008    6    auto(s6)   f   17   26  p   \n\n       class  \n1    compact  \n2    compact  \n3    compact  \n4    compact  \n5    compact  \n..       ...  \n230  midsize  \n231  midsize  \n232  midsize  \n233  midsize  \n234  midsize  \n\n[234 rows x 11 columns]\n\n\n\n\nQ2. 복사본 데이터를 이용해 cty는 city로, hwy는 highway로 수정하세요.\n\ndf_mpg_new = df_mpg_new.rename(columns = {'cty' : 'city'})\nprint(df_mpg_new['city'])\n\ndf_mpg_new = df_mpg_new.rename(columns = {'hwy' : 'highway'})\nprint(df_mpg_new['highway'])\n\n1      18\n2      21\n3      20\n4      21\n5      16\n       ..\n230    19\n231    21\n232    16\n233    18\n234    17\nName: city, Length: 234, dtype: int64\n1      29\n2      29\n3      31\n4      30\n5      26\n       ..\n230    28\n231    29\n232    26\n233    26\n234    26\nName: highway, Length: 234, dtype: int64\n\n\n\n\nQ3. 데이터 일부를 출력해 변수명이 바뀌었는지 확인해 보세요.\n\nprint(df_mpg_new.head())\n\n  manufacturer model  displ  year  cyl       trans drv  city  highway fl  \\\n1         audi    a4    1.8  1999    4    auto(l5)   f    18       29  p   \n2         audi    a4    1.8  1999    4  manual(m5)   f    21       29  p   \n3         audi    a4    2.0  2008    4  manual(m6)   f    20       31  p   \n4         audi    a4    2.0  2008    4    auto(av)   f    21       30  p   \n5         audi    a4    2.8  1999    6    auto(l5)   f    16       26  p   \n\n     class  \n1  compact  \n2  compact  \n3  compact  \n4  compact  \n5  compact  \n\n\n\n\n\n130p\n\nQ1. midwest.csv를 불러와 데이터의 특징을 파악하세요.\n\ndf_mw = pd.read_csv('data/midwest.csv')\nprint(df_mw.info())\nprint(df_mw.head())\nprint(df_mw.tail())\nprint(df_mw.shape)\nprint(df_mw.describe())\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 437 entries, 0 to 436\nData columns (total 28 columns):\n #   Column                Non-Null Count  Dtype  \n---  ------                --------------  -----  \n 0   PID                   437 non-null    int64  \n 1   county                437 non-null    object \n 2   state                 437 non-null    object \n 3   area                  437 non-null    float64\n 4   poptotal              437 non-null    int64  \n 5   popdensity            437 non-null    float64\n 6   popwhite              437 non-null    int64  \n 7   popblack              437 non-null    int64  \n 8   popamerindian         437 non-null    int64  \n 9   popasian              437 non-null    int64  \n 10  popother              437 non-null    int64  \n 11  percwhite             437 non-null    float64\n 12  percblack             437 non-null    float64\n 13  percamerindan         437 non-null    float64\n 14  percasian             437 non-null    float64\n 15  percother             437 non-null    float64\n 16  popadults             437 non-null    int64  \n 17  perchsd               437 non-null    float64\n 18  percollege            437 non-null    float64\n 19  percprof              437 non-null    float64\n 20  poppovertyknown       437 non-null    int64  \n 21  percpovertyknown      437 non-null    float64\n 22  percbelowpoverty      437 non-null    float64\n 23  percchildbelowpovert  437 non-null    float64\n 24  percadultpoverty      437 non-null    float64\n 25  percelderlypoverty    437 non-null    float64\n 26  inmetro               437 non-null    int64  \n 27  category              437 non-null    object \ndtypes: float64(15), int64(10), object(3)\nmemory usage: 95.7+ KB\nNone\n   PID     county state   area  poptotal   popdensity  popwhite  popblack  \\\n0  561      ADAMS    IL  0.052     66090  1270.961540     63917      1702   \n1  562  ALEXANDER    IL  0.014     10626   759.000000      7054      3496   \n2  563       BOND    IL  0.022     14991   681.409091     14477       429   \n3  564      BOONE    IL  0.017     30806  1812.117650     29344       127   \n4  565      BROWN    IL  0.018      5836   324.222222      5264       547   \n\n   popamerindian  popasian  ...  percollege  percprof  poppovertyknown  \\\n0             98       249  ...   19.631392  4.355859            63628   \n1             19        48  ...   11.243308  2.870315            10529   \n2             35        16  ...   17.033819  4.488572            14235   \n3             46       150  ...   17.278954  4.197800            30337   \n4             14         5  ...   14.475999  3.367680             4815   \n\n   percpovertyknown  percbelowpoverty  percchildbelowpovert  percadultpoverty  \\\n0         96.274777         13.151443             18.011717         11.009776   \n1         99.087145         32.244278             45.826514         27.385647   \n2         94.956974         12.068844             14.036061         10.852090   \n3         98.477569          7.209019             11.179536          5.536013   \n4         82.505140         13.520249             13.022889         11.143211   \n\n   percelderlypoverty  inmetro  category  \n0           12.443812        0       AAR  \n1           25.228976        0       LHR  \n2           12.697410        0       AAR  \n3            6.217047        1       ALU  \n4           19.200000        0       AAR  \n\n[5 rows x 28 columns]\n      PID     county state   area  poptotal   popdensity  popwhite  popblack  \\\n432  3048   WAUKESHA    WI  0.034    304715  8962.205880    298313      1096   \n433  3049    WAUPACA    WI  0.045     46104  1024.533330     45695        22   \n434  3050   WAUSHARA    WI  0.037     19385   523.918919     19094        29   \n435  3051  WINNEBAGO    WI  0.035    140320  4009.142860    136822       697   \n436  3052       WOOD    WI  0.048     73605  1533.437500     72157        90   \n\n     popamerindian  popasian  ...  percollege  percprof  poppovertyknown  \\\n432            672      2699  ...   35.396784  7.667090           299802   \n433            125        92  ...   16.549869  3.138596            44412   \n434             70        43  ...   15.064584  2.620907            19163   \n435            685      1728  ...   24.995504  5.659847           133950   \n436            481       722  ...   21.666382  4.583725            72685   \n\n     percpovertyknown  percbelowpoverty  percchildbelowpovert  \\\n432         98.387674          3.121060              3.785820   \n433         96.330036          8.488697             10.071411   \n434         98.854785         13.786985             20.050708   \n435         95.460376          8.804031             10.592031   \n436         98.750085          8.525831             11.162997   \n\n     percadultpoverty  percelderlypoverty  inmetro  category  \n432          2.590061            4.085479        1       HLU  \n433          6.953799           10.338641        0       AAR  \n434         11.695784           11.804558        0       AAR  \n435          8.660587            6.661094        1       HAU  \n436          7.375656            7.882918        0       AAR  \n\n[5 rows x 28 columns]\n(437, 28)\n               PID        area      poptotal    popdensity      popwhite  \\\ncount   437.000000  437.000000  4.370000e+02    437.000000  4.370000e+02   \nmean   1437.338673    0.033169  9.613030e+04   3097.742985  8.183992e+04   \nstd     876.390266    0.014679  2.981705e+05   7664.751786  2.001966e+05   \nmin     561.000000    0.005000  1.701000e+03     85.050000  4.160000e+02   \n25%     670.000000    0.024000  1.884000e+04    622.407407  1.863000e+04   \n50%    1221.000000    0.030000  3.532400e+04   1156.208330  3.447100e+04   \n75%    2059.000000    0.038000  7.565100e+04   2330.000000  7.296800e+04   \nmax    3052.000000    0.110000  5.105067e+06  88018.396600  3.204947e+06   \n\n           popblack  popamerindian       popasian       popother   percwhite  \\\ncount  4.370000e+02     437.000000     437.000000     437.000000  437.000000   \nmean   1.102388e+04     343.109840    1310.464531    1612.931350   95.558441   \nstd    7.895827e+04     868.926751    9518.394189   18526.540699    7.087358   \nmin    0.000000e+00       4.000000       0.000000       0.000000   10.694087   \n25%    2.900000e+01      44.000000      35.000000      20.000000   94.886032   \n50%    2.010000e+02      94.000000     102.000000      66.000000   98.032742   \n75%    1.291000e+03     288.000000     401.000000     345.000000   99.074935   \nmax    1.317147e+06   10289.000000  188565.000000  384119.000000   99.822821   \n\n       ...     perchsd  percollege    percprof  poppovertyknown  \\\ncount  ...  437.000000  437.000000  437.000000     4.370000e+02   \nmean   ...   73.965546   18.272736    4.447259     9.364228e+04   \nstd    ...    5.843177    6.261908    2.408427     2.932351e+05   \nmin    ...   46.912261    7.336108    0.520291     1.696000e+03   \n25%    ...   71.325329   14.113725    2.997957     1.836400e+04   \n50%    ...   74.246891   16.797562    3.814239     3.378800e+04   \n75%    ...   77.195345   20.549893    4.949324     7.284000e+04   \nmax    ...   88.898674   48.078510   20.791321     5.023523e+06   \n\n       percpovertyknown  percbelowpoverty  percchildbelowpovert  \\\ncount        437.000000        437.000000            437.000000   \nmean          97.110267         12.510505             16.447464   \nstd            2.749863          5.150155              7.228634   \nmin           80.902441          2.180168              1.918955   \n25%           96.894572          9.198715             11.624088   \n50%           98.169562         11.822313             15.270164   \n75%           98.598636         15.133226             20.351878   \nmax           99.860384         48.691099             64.308477   \n\n       percadultpoverty  percelderlypoverty     inmetro  \ncount        437.000000          437.000000  437.000000  \nmean          10.918798           11.389043    0.343249  \nstd            5.109166            3.661259    0.475338  \nmin            1.938504            3.547067    0.000000  \n25%            7.668009            8.911763    0.000000  \n50%           10.007610           10.869119    0.000000  \n75%           13.182182           13.412162    1.000000  \nmax           43.312464           31.161972    1.000000  \n\n[8 rows x 25 columns]\n\n\n\n\nQ2. poptotal(전체 인구) 변수를 total로, popasian(아시아 인구) 변수를 asian으로 수정하세요.\n\ndf_mw = df_mw.rename(columns = {'poptotal' : 'total'})\ndf_mw = df_mw.rename(columns = {'popasian' : 'asian'})\n\nprint(df_mw['total'])\nprint(df_mw['asian'])\n\n0       66090\n1       10626\n2       14991\n3       30806\n4        5836\n        ...  \n432    304715\n433     46104\n434     19385\n435    140320\n436     73605\nName: total, Length: 437, dtype: int64\n0       249\n1        48\n2        16\n3       150\n4         5\n       ... \n432    2699\n433      92\n434      43\n435    1728\n436     722\nName: asian, Length: 437, dtype: int64\n\n\n\n\nQ3. total, asian 변수를 이용해 ‘전체 인구 대비 아시아 인구 백분율’ 파생변수를 추가하고, 히스토그램을 만들어 분포를 살펴보세요.\n\ndf_mw['per_asian'] = (df_mw['asian'] / df_mw['total']) * 100\nprint(df_mw)\n\ndf_mw['per_asian'].plot.hist()\n\n      PID     county state   area   total   popdensity  popwhite  popblack  \\\n0     561      ADAMS    IL  0.052   66090  1270.961540     63917      1702   \n1     562  ALEXANDER    IL  0.014   10626   759.000000      7054      3496   \n2     563       BOND    IL  0.022   14991   681.409091     14477       429   \n3     564      BOONE    IL  0.017   30806  1812.117650     29344       127   \n4     565      BROWN    IL  0.018    5836   324.222222      5264       547   \n..    ...        ...   ...    ...     ...          ...       ...       ...   \n432  3048   WAUKESHA    WI  0.034  304715  8962.205880    298313      1096   \n433  3049    WAUPACA    WI  0.045   46104  1024.533330     45695        22   \n434  3050   WAUSHARA    WI  0.037   19385   523.918919     19094        29   \n435  3051  WINNEBAGO    WI  0.035  140320  4009.142860    136822       697   \n436  3052       WOOD    WI  0.048   73605  1533.437500     72157        90   \n\n     popamerindian  asian  ...  percprof  poppovertyknown  percpovertyknown  \\\n0               98    249  ...  4.355859            63628         96.274777   \n1               19     48  ...  2.870315            10529         99.087145   \n2               35     16  ...  4.488572            14235         94.956974   \n3               46    150  ...  4.197800            30337         98.477569   \n4               14      5  ...  3.367680             4815         82.505140   \n..             ...    ...  ...       ...              ...               ...   \n432            672   2699  ...  7.667090           299802         98.387674   \n433            125     92  ...  3.138596            44412         96.330036   \n434             70     43  ...  2.620907            19163         98.854785   \n435            685   1728  ...  5.659847           133950         95.460376   \n436            481    722  ...  4.583725            72685         98.750085   \n\n     percbelowpoverty  percchildbelowpovert  percadultpoverty  \\\n0           13.151443             18.011717         11.009776   \n1           32.244278             45.826514         27.385647   \n2           12.068844             14.036061         10.852090   \n3            7.209019             11.179536          5.536013   \n4           13.520249             13.022889         11.143211   \n..                ...                   ...               ...   \n432          3.121060              3.785820          2.590061   \n433          8.488697             10.071411          6.953799   \n434         13.786985             20.050708         11.695784   \n435          8.804031             10.592031          8.660587   \n436          8.525831             11.162997          7.375656   \n\n     percelderlypoverty  inmetro  category  per_asian  \n0             12.443812        0       AAR   0.376759  \n1             25.228976        0       LHR   0.451722  \n2             12.697410        0       AAR   0.106731  \n3              6.217047        1       ALU   0.486918  \n4             19.200000        0       AAR   0.085675  \n..                  ...      ...       ...        ...  \n432            4.085479        1       HLU   0.885746  \n433           10.338641        0       AAR   0.199549  \n434           11.804558        0       AAR   0.221821  \n435            6.661094        1       HAU   1.231471  \n436            7.882918        0       AAR   0.980912  \n\n[437 rows x 29 columns]\n\n\n\n\n\n\n\n\n\n\n\nQ4. 아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 large, 그 외에는 small을 부여한 파생변수를 만들어 보세요.\n\nper_asian_mean = df_mw['per_asian'].mean()\nprint(per_asian_mean)\n\nimport numpy as np\ndf_mw['SmallLarge'] = np.where(df_mw['per_asian'] &gt; per_asian_mean, 'large', 'small')\nprint(df_mw)\n\n0.4872461834357345\n      PID     county state   area   total   popdensity  popwhite  popblack  \\\n0     561      ADAMS    IL  0.052   66090  1270.961540     63917      1702   \n1     562  ALEXANDER    IL  0.014   10626   759.000000      7054      3496   \n2     563       BOND    IL  0.022   14991   681.409091     14477       429   \n3     564      BOONE    IL  0.017   30806  1812.117650     29344       127   \n4     565      BROWN    IL  0.018    5836   324.222222      5264       547   \n..    ...        ...   ...    ...     ...          ...       ...       ...   \n432  3048   WAUKESHA    WI  0.034  304715  8962.205880    298313      1096   \n433  3049    WAUPACA    WI  0.045   46104  1024.533330     45695        22   \n434  3050   WAUSHARA    WI  0.037   19385   523.918919     19094        29   \n435  3051  WINNEBAGO    WI  0.035  140320  4009.142860    136822       697   \n436  3052       WOOD    WI  0.048   73605  1533.437500     72157        90   \n\n     popamerindian  asian  ...  poppovertyknown  percpovertyknown  \\\n0               98    249  ...            63628         96.274777   \n1               19     48  ...            10529         99.087145   \n2               35     16  ...            14235         94.956974   \n3               46    150  ...            30337         98.477569   \n4               14      5  ...             4815         82.505140   \n..             ...    ...  ...              ...               ...   \n432            672   2699  ...           299802         98.387674   \n433            125     92  ...            44412         96.330036   \n434             70     43  ...            19163         98.854785   \n435            685   1728  ...           133950         95.460376   \n436            481    722  ...            72685         98.750085   \n\n     percbelowpoverty  percchildbelowpovert  percadultpoverty  \\\n0           13.151443             18.011717         11.009776   \n1           32.244278             45.826514         27.385647   \n2           12.068844             14.036061         10.852090   \n3            7.209019             11.179536          5.536013   \n4           13.520249             13.022889         11.143211   \n..                ...                   ...               ...   \n432          3.121060              3.785820          2.590061   \n433          8.488697             10.071411          6.953799   \n434         13.786985             20.050708         11.695784   \n435          8.804031             10.592031          8.660587   \n436          8.525831             11.162997          7.375656   \n\n     percelderlypoverty  inmetro  category  per_asian  SmallLarge  \n0             12.443812        0       AAR   0.376759       small  \n1             25.228976        0       LHR   0.451722       small  \n2             12.697410        0       AAR   0.106731       small  \n3              6.217047        1       ALU   0.486918       small  \n4             19.200000        0       AAR   0.085675       small  \n..                  ...      ...       ...        ...         ...  \n432            4.085479        1       HLU   0.885746       large  \n433           10.338641        0       AAR   0.199549       small  \n434           11.804558        0       AAR   0.221821       small  \n435            6.661094        1       HAU   1.231471       large  \n436            7.882918        0       AAR   0.980912       large  \n\n[437 rows x 30 columns]\n\n\n\n\nQ5. large와 small에 해당하는 지역이 얼마나 많은지 빈도표와 빈도 막대 그래프를 만들어 확인해 보세요.\n\n# 빈도표\ndf_mw['SmallLarge'].value_counts()\n\n# 빈도 막대 그래프\ncount_sl = df_mw['SmallLarge'].value_counts()\ncount_sl.plot.bar(rot = 0)"
  }
]