{
  "hash": "e9c0d38754a1bc1f915c27d4a7931c08",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"HW5\"\nauthor: \"Dakyung Lee\"\ndate: \"2024-07-29\"\njupyter: python3\n---\n\n### Q1. # 균일분포 (3, 7)에서 20개의 표본 뽑기 (10000개 사용) \n\n::: {#2f5288c4 .cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy.stats import uniform\n\nx = uniform.rvs(loc=3, scale=4, size=20*10000).reshape(-1,20)\nx\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```\narray([[5.47072584, 4.25411569, 5.08487914, ..., 6.90816282, 5.0888124 ,\n        3.48907393],\n       [5.46903757, 6.8892847 , 5.35590862, ..., 3.24906697, 5.51463388,\n        6.10799538],\n       [4.95959669, 3.04239132, 6.97681011, ..., 4.73582811, 6.50780201,\n        3.15977979],\n       ...,\n       [6.02732873, 3.97745429, 4.05402356, ..., 5.31730024, 3.07032192,\n        3.38317704],\n       [3.763338  , 5.45393809, 6.51928928, ..., 6.60840044, 6.83475579,\n        4.81617092],\n       [5.68571741, 6.08774942, 3.97172105, ..., 4.51710289, 3.14220876,\n        5.72266615]])\n```\n:::\n:::\n\n\n### Q2. n-1로 나눈 것을 s_2 으로 정의하고 모분산 위치에 녹색 막대 추가하기.\n\n::: {#db3035de .cell execution_count=2}\n``` {.python .cell-code}\ns_2 = x.var(axis = 1, ddof = 1)\ns_2\n\nsns.histplot(s_2)\nplt.axvline(x.var(), color=\"green\", linewidth = 2)\nplt.show()\nplt.clf()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-3-output-1.png){width=593 height=411}\n:::\n\n::: {.cell-output .cell-output-display}\n```\n<Figure size 672x480 with 0 Axes>\n```\n:::\n:::\n\n\n### Q3. 왜 n-1을 사용하는 것이 더 타당한지?\n* 분모를 `n-1`로 가진 그래프가 모분산에 더 근접한 결과를 보이기 때문에\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}